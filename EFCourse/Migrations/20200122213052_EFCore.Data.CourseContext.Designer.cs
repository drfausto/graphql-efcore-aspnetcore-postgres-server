// <auto-generated />
using EFCourse.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace EFCourse.Migrations
{
    [DbContext(typeof(CourseContext))]
    [Migration("20200122213052_EFCore.Data.CourseContext")]
    partial class EFCoreDataCourseContext
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("EFCourse.Models.Course", b =>
                {
                    b.Property<int>("CourseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CourseId")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("DepartmentId")
                        .HasColumnName("DepartmentId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(128)")
                        .HasMaxLength(128)
                        .IsUnicode(false);

                    b.HasKey("CourseID");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Course");
                });

            modelBuilder.Entity("EFCourse.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DepartmentId")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(64)")
                        .HasMaxLength(64)
                        .IsUnicode(false);

                    b.Property<int>("UniversityId")
                        .HasColumnName("UniversityId")
                        .HasColumnType("integer");

                    b.HasKey("DepartmentId");

                    b.HasIndex("UniversityId");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("EFCourse.Models.University", b =>
                {
                    b.Property<int>("UniversityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UniversityId")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("character varying(32)")
                        .HasMaxLength(32)
                        .IsUnicode(false);

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("character varying(32)")
                        .HasMaxLength(32)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(64)")
                        .HasMaxLength(64)
                        .IsUnicode(false);

                    b.Property<string>("State")
                        .HasColumnType("character varying(32)")
                        .HasMaxLength(32)
                        .IsUnicode(false);

                    b.HasKey("UniversityId");

                    b.ToTable("University");
                });

            modelBuilder.Entity("EFCourse.Models.Course", b =>
                {
                    b.HasOne("EFCourse.Models.Department", "Department")
                        .WithMany("Course")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK_Department")
                        .IsRequired();
                });

            modelBuilder.Entity("EFCourse.Models.Department", b =>
                {
                    b.HasOne("EFCourse.Models.University", "University")
                        .WithMany("Department")
                        .HasForeignKey("UniversityId")
                        .HasConstraintName("FK_University")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
